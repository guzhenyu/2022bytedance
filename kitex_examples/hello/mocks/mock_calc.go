// Code generated by MockGen. DO NOT EDIT.
// Source: calc.go

// Package mock_calc is a generated GoMock package.
package mock_calc

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCalc is a mock of Calc interface.
type MockCalc struct {
	ctrl     *gomock.Controller
	recorder *MockCalcMockRecorder
}

// MockCalcMockRecorder is the mock recorder for MockCalc.
type MockCalcMockRecorder struct {
	mock *MockCalc
}

// NewMockCalc creates a new mock instance.
func NewMockCalc(ctrl *gomock.Controller) *MockCalc {
	mock := &MockCalc{ctrl: ctrl}
	mock.recorder = &MockCalcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCalc) EXPECT() *MockCalcMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockCalc) Add(x, y int64) int64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", x, y)
	ret0, _ := ret[0].(int64)
	return ret0
}

// Add indicates an expected call of Add.
func (mr *MockCalcMockRecorder) Add(x, y interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockCalc)(nil).Add), x, y)
}
